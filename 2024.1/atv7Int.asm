;*                     ARQUIVOS DE DEFINIÇÕES                      *
#INCLUDE <p12f675.inc>	;ARQUIVO PADRÃO MICROCHIP PARA 12F675

	__CONFIG _BODEN_OFF & _CP_OFF & _PWRTE_ON & _WDT_OFF & _MCLRE_ON & _INTRC_OSC_NOCLKOUT

#DEFINE	BANK0	BCF STATUS,RP0	;SETA BANK 0 DE MEMÓRIA
#DEFINE	BANK1	BSF STATUS,RP0	;SETA BANK 1 DE MAMÓRIA

;*                         VARIÁVEIS                               *

	CBLOCK	0x20	;ENDEREÇO INICIAL DA MEMÓRIA DE
					;USUÁRIO
		W_TEMP		;REGISTRADORES TEMPORÁRIOS PARA USO
		STATUS_TEMP	;JUNTO ÀS INTERRUPÇÕES
		AUX		;VARIAVEL AUXILIAR QUE RECEBERA OS DADOS DO ADRESH
		AUX1
		MAIOR
		;COLOQUE AQUI SUAS NOVAS VARIÁVEIS
		;NÃO ESQUEÇA COMENTÁRIOS ESCLARECEDORES

	ENDC			;FIM DO BLOCO DE DEFINIÇÃO DE VARIÁVEIS

;*                        FLAGS INTERNOS                           *

;*                         CONSTANTES                              *
ORG 0x2100
	DE	0X89,0X1E,0X39,0X9F,0XC2,0X0C,0XAB,0X33,0X63,0XD3,0X95,0X7B,0X38,0XD6,0X1E,0X48
	DE	0XDB,0XD8,0X86,0XFD,0XA5,0XFC,0X0C,0XBE,0X68,0X9B,0XD9,0X10,0XD8,0XEC,0X90,0X91
	DE	0XAA,0XBB,0XCC,0XDD,0XEE,0XF1,0XC9,0X77

;*                           ENTRADAS                              *

;*                           SAÍDAS                                *

;*                       VETOR DE RESET                            *

	ORG	0x00			;ENDEREÇO INICIAL DE PROCESSAMENTO
	GOTO	INICIO
	
;*                    INÍCIO DA INTERRUPÇÃO                        *

	ORG	0x04			;ENDEREÇO INICIAL DA INTERRUPÇÃO
	MOVWF	W_TEMP		;COPIA W PARA W_TEMP
	SWAPF	STATUS,W
	MOVWF	STATUS_TEMP	;COPIA STATUS PARA STATUS_TEMP

;*                    ROTINA DE INTERRUPÇÃO                        *
	BTFSS	PIR1, ADIF	;FIM DA CONVERSÃO A/D
	GOTO	SAI_INT	;ESTOURO DE 'TMR1'
	BCF	PIR1, ADIF
	MOVFW	ADRESH	    
	MOVWF	AUX		;'AUX' RECEBE O VALOR CONVERTIDO
;*                 ROTINA DE SAÍDA DA INTERRUPÇÃO                  *
TESTE10m:
	MOVLW	D'5'	    ;EQUIVALENTE A 100 mV(10 metros)
	SUBWF	AUX, W
	BTFSC	STATUS, C   ;SE O AUX > W ATIVA O CARRY, E DEVEMOS SAIR DA INTERRUPCAO PARA ESPERAR UMA NOVA AQUISICAO
	GOTO	BUSCA_APOGEU
	GOTO	SAI_INT	    ;PARA ESPERAR NOVA CONVERSAO

BUSCA_APOGEU:
    NOP
    BSF	    ADCON0, GO
    WAIT_ADC:
	BTFSC	ADCON0, GO         
	GOTO	WAIT_ADC            
	MOVFW	ADRESH	
	MOVWF	AUX1
    MOVFW   AUX
    SUBWF   AUX1, W			;W = AUX1 - AUX  => SE O VALOR DA CONVERSAO ANTERIOR FOR MAIOR QUE O DA REGISTRADA EM AUX1  
    BTFSC   STATUS, 0			;SIGNIFICA QUE A CONVERSAO ANTERIOR FOI A DO APOGEU. SE NAO FOR SALVA AUX1 E ESPERA UMA NOVA CONVERSAO
    GOTO    SALVA_MAIOR_VOLTA_BUSCA	
    GOTO    GRAVA_EEPROM
    
    
SALVA_MAIOR_VOLTA_BUSCA:
    MOVFW   AUX1
    MOVWF   AUX
    GOTO    BUSCA_APOGEU
    
    
	
GOTO SAI_INT
SAI_INT
	SWAPF	STATUS_TEMP,W
	MOVWF	STATUS		;MOVE STATUS_TEMP PARA STATUS
	SWAPF	W_TEMP,F
	SWAPF	W_TEMP,W	;MOVE W_TEMP PARA W
	RETFIE

;*	            	 ROTINAS E SUBROTINAS                      *

SUBROTINA1

	;CORPO DA ROTINA

	RETURN
GRAVA_EEPROM
;ESCREVE UM DADO NA EEPROM, CUJO ENDEREÇO É INDICADO EM W
;O DADO A SER ESCRITO DEVE ESTAR ARMAZENADO NA VARIÁVEL DADO
	ANDLW	.127		;LIMITA ENDEREÇO MAX. 127
	BANK1				;ACESSO VIA BANK 1
	MOVWF	EEADR
	MOVF	AUX,W
	MOVWF	EEDATA
	BSF		EECON1,WREN ;HABILITA ESCRITA
	BCF		INTCON,GIE	;DESLIGA INTERRUPÇÕES
	MOVLW	B'01010101'	;DESBLOQUEIA ESCRITA
	MOVWF	EECON2		;
	MOVLW	B'10101010'	;DESBLOQUEIA ESCRITA
	MOVWF	EECON2		;
	BSF		EECON1,WR ;INICIA A ESCRITA
AGUARDA
	BTFSC	EECON1,WR ;TERMINOU?
	GOTO	AGUARDA
	BSF		INTCON,GIE ;HABILITA INTERRUPÇÕES
	BANK0				;POSICIONA PARA BANK 0
	RETURN


;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIO DO PROGRAMA                          *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	
INICIO
	BANK1				;ALTERA PARA O BANCO 1
	MOVLW	B'00000001' ;CONFIGURA TODAS AS PORTAS DO GPIO (PINOS)
	MOVWF	TRISIO		;COMO SAÍDAS
	MOVLW	B'00000001'
	MOVWF	ANSEL 		;DEFINE PORTAS COMO Digital I/O
	MOVLW	B'00000100'
	MOVWF	OPTION_REG	;DEFINE OPÇÕES DE OPERAÇÃO
	MOVLW	B'11000000'
	MOVWF	INTCON		;DEFINE OPÇÕES DE INTERRUPÇÕES -> habilitada e por periferico
	MOVLW	B'01000001'
	MOVWF	PIE1		;HABILITADOS: INTERRP POR ADC E POR TMR1 OVERFLOW

	BANK0				;RETORNA PARA O BANCO
	MOVLW	B'00000111'
	MOVWF	CMCON		;DEFINE O MODO DE OPERAÇÃO DO COMPARADOR ANALÓGICO
	MOVLW	B'00110001'
	MOVWF	T1CON
	MOVLW	B'00000001'
	MOVWF	ADCON0

;*                     INICIALIZAÇÃO DAS VARIÁVEIS                 *
MOVLW	D'11'
MOVWF	TMR1H
MOVLW	D'223'
MOVWF	TMR1L
;*                     ROTINA PRINCIPAL                            *

MAIN

	;CORPO DA ROTINA PRINCIPAL	;TENSÃO DE ENTRADA POR ESTÍMULO
	CLRF	TMR1L		;ZERA A PARTE 'LOW' DO 'TIMER1'
	CLRF	TMR1H		;ZERA A PARTE 'HIGH' DO 'TIMER1'
	BSF	ADCON0, GO	;HABILITA A CONVERSÃO A/D
	AGUARDA_INT:
	;APÓS O TÉRMINO DO PRIMEIRO CICLO DE CONVERSÃO, UMA NOVA
	;TENSÃO DE ENTRADA E A HABILITAÇÃO DE UMA NOVA CONVERSÃO
	;SÃO FEITAS ATRAVÉS DE ESTÍMULOS AO FINAL DA INTERRUPÇÃO POR 'TIMER1'
	GOTO	AGUARDA_INT

	GOTO	MAIN

	END