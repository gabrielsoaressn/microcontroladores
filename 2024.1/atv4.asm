;*                     ARQUIVOS DE DEFINIÇÕES                      *
;   Pelo que eu entendi, devemos colocar colocar o gp4 como 
;   entrada então, quando o programa inicia com gp4 em 1. 
;   Quando o gp4 for 0 inicia-se uma interrupçao e quando o gp4 
;   for 1 novamente, encerra-se, guarda-se o tempo em que 
;   interrupcao foi ativa e aguarda uma nova interrupcao.

#INCLUDE <p12f675.inc>	;ARQUIVO PADRÃO MICROCHIP PARA 12F675

	__CONFIG _BODEN_OFF & _CP_OFF & _PWRTE_ON & _WDT_OFF & _MCLRE_ON & _INTRC_OSC_NOCLKOUT

#DEFINE	BANK0	BCF STATUS,RP0	;SETA BANK 0 DE MEMÓRIA
#DEFINE	BANK1	BSF STATUS,RP0	;SETA BANK 1 DE MAMÓRIA

;*                         VARIÁVEIS                               *

	CBLOCK	0x20	;ENDEREÇO INICIAL DA MEMÓRIA DE
					;USUÁRIO
		W_TEMP		;REGISTRADORES TEMPORÁRIOS PARA USO
		STATUS_TEMP	;JUNTO ÀS INTERRUPÇÕES
		TEMPO_PULSO

	ENDC			;FIM DO BLOCO DE DEFINIÇÃO DE VARIÁVEIS

;*                        FLAGS INTERNOS                           *

;*                         CONSTANTES                              *

;*                           ENTRADAS                              *

;*                           SAÍDAS                                *

;*                       VETOR DE RESET                            *

	ORG	0x00			;ENDEREÇO INICIAL DE PROCESSAMENTO
	GOTO	INICIO
	
;*                    INÍCIO DA INTERRUPÇÃO                        *

	ORG	0x04			;ENDEREÇO INICIAL DA INTERRUPÇÃO
	MOVWF	W_TEMP		;COPIA W PARA W_TEMP
	SWAPF	STATUS,W
	MOVWF	STATUS_TEMP	;COPIA STATUS PARA STATUS_TEMP
	
	BTFSS	INTCON, GPIF
	GOTO	SAI_INT
	BCF	INTCON, GPIF
	CLRF	TMR0
    LOOP:
	BTFSS	GPIO,GP4
	GOTO	LOOP
	GOTO	SAI_INT
	

;*                    ROTINA DE INTERRUPÇÃO                        *

;*                 ROTINA DE SAÍDA DA INTERRUPÇÃO                  *

SAI_INT
	BCF	INTCON, GPIF
	MOVFW	TMR0
	MOVWF	TEMPO_PULSO
	SWAPF	STATUS_TEMP,W
	MOVWF	STATUS		;MOVE STATUS_TEMP PARA STATUS
	SWAPF	W_TEMP,F
	SWAPF	W_TEMP,W	;MOVE W_TEMP PARA W
	RETFIE

;*	            	 ROTINAS E SUBROTINAS                      *

SAIDA_OFF:
    BCF	    GPIO, GP0
    BCF	    GPIO, GP1
    BSF	    GPIO, GP2
    GOTO    MAIN

SAIDA_001:
    BSF	    GPIO, GP0
    BCF	    GPIO, GP1
    BCF	    GPIO, GP2
    GOTO    MAIN

SAIDA_010:
    BCF	    GPIO, GP0
    BSF	    GPIO, GP1
    BCF	    GPIO, GP2
    GOTO    MAIN
    
TESTE_230:
    MOVLW	B'01101111'	;QUAL É O LITERAL EQUIVALENTE A 230us//111
    SUBWF	TEMPO_PULSO, W
    BTFSS	STATUS, C
    GOTO	SAIDA_001	;NAO TEM CARRY -> TEMPO DE PULSO FOI MENOR QUE 230 
    GOTO	TESTE_350

TESTE_350:
    MOVLW	B'10101001'	;QUAL É O LITERAL EQUIVALENTE A 230us//111
    SUBWF	TEMPO_PULSO, W
    BTFSS	STATUS, C
    GOTO	SAIDA_OFF	;NAO TEM CARRY -> TEMPO DE PULSO FOI MENOR QUE 230 
    GOTO	TESTE_450
    
TESTE_450:
    MOVLW	B'11011001'	;QUAL É O LITERAL EQUIVALENTE A 230us//111
    SUBWF	TEMPO_PULSO, W
    BTFSS	STATUS, C
    GOTO	SAIDA_010	;NAO TEM CARRY -> TEMPO DE PULSO FOI MENOR QUE 230 
    GOTO	SAIDA_OFF
;*                     INICIO DO PROGRAMA                          *
	
INICIO
	BANK1				;ALTERA PARA O BANCO 1
	MOVLW	B'00010000' ;CONFIGURA TODAS AS PORTAS DO GPIO (PINOS)
	MOVWF	TRISIO		;COMO SAÍDAS
	CLRF	ANSEL 		;DEFINE PORTAS COMO Digital I/O
	MOVLW	B'00000000'
	MOVWF	OPTION_REG	;DEFINE OPÇÕES DE OPERAÇÃO
	MOVLW	B'10101000'
	MOVWF	INTCON		;DEFINE OPÇÕES DE INTERRUPÇÕES
	BSF	IOC, 4

	BANK0				;RETORNA PARA O BANCO
	MOVLW	B'00000111'
	MOVWF	CMCON		;DEFINE O MODO DE OPERAÇÃO DO COMPARADOR ANALÓGICO

;*                     INICIALIZAÇÃO DAS VARIÁVEIS                 *

;*                     ROTINA PRINCIPAL                            *

MAIN
	MOVLW	B'01010010'	;QUAL É O LITERAL EQUIVALENTE A 170us
	SUBWF	TEMPO_PULSO, W
	BTFSS	STATUS, C
	GOTO	SAIDA_OFF	;NAO TEM CARRY -> TEMPO DE PULSO FOI MENOR QUE 4
	GOTO	TESTE_230
	GOTO	MAIN

	END