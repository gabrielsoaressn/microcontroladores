;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*              MODIFICAÇÕES PARA USO COM 12F675                   *
;*                FEITAS PELO PROF. MARDSON                        *
;*                      DEZEMBRO DE 2024                           *
;*                 BASEADO NO EXEMPLO DO LIVRO                     *
;*           Desbravando o PIC. David José de Souza                *
;*-----------------------------------------------------------------*
;*   MODELO PARA O PIC 12F675                                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ARQUIVOS DE DEFINIÇÕES                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#INCLUDE <p12f675.inc>	;ARQUIVO PADRÃO MICROCHIP PARA 12F675

	__CONFIG _BODEN_OFF & _CP_OFF & _PWRTE_ON & _WDT_OFF & _MCLRE_ON & _INTRC_OSC_NOCLKOUT

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    PAGINAÇÃO DE MEMÓRIA                         *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;DEFINIÇÃO DE COMANDOS DE USUÁRIO PARA ALTERAÇÃO DA PÁGINA DE MEMÓRIA
#DEFINE	BANK0	BCF STATUS,RP0	;SETA BANK 0 DE MEMÓRIA
#DEFINE	BANK1	BSF STATUS,RP0	;SETA BANK 1 DE MAMÓRIA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         VARIÁVEIS                               *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DOS NOMES E ENDEREÇOS DE TODAS AS VARIÁVEIS UTILIZADAS 
; PELO SISTEMA

	CBLOCK	0x20	;ENDEREÇO INICIAL DA MEMÓRIA DE
					;USUÁRIO
		W_TEMP		;REGISTRADORES TEMPORÁRIOS PARA USO
		STATUS_TEMP	;JUNTO ÀS INTERRUPÇÕES
		BYTE_RECEBIDO
		BUFFER_TRANSMISSAO
		CONTADOR_BYTE
	ENDC			;FIM DO BLOCO DE DEFINIÇÃO DE VARIÁVEIS


	ORG	0x00			;ENDEREÇO INICIAL DE PROCESSAMENTO
	GOTO	INICIO
	

	ORG	0x04			;ENDEREÇO INICIAL DA INTERRUPÇÃO
	MOVWF	W_TEMP		;COPIA W PARA W_TEMP
	SWAPF	STATUS,W
	MOVWF	STATUS_TEMP	;COPIA STATUS PARA STATUS_TEMP

SAI_INT
	SWAPF	STATUS_TEMP,W
	MOVWF	STATUS		;MOVE STATUS_TEMP PARA STATUS
	SWAPF	W_TEMP,F
	SWAPF	W_TEMP,W	;MOVE W_TEMP PARA W
	RETFIE
MANDA_0:
    BCF GPIO, GP1
    GOTO PREPARA_ITERACAO_SEGUINTE

MANDA_1:
    BSF GPIO, GP1
    GOTO PREPARA_ITERACAO_SEGUINTE
    
	
PROXIMA:
    RLF	    BYTE_RECEBIDO
    GOTO    RECEBE_BYTE
ITERACAO:
    RRF	    ADRESH
    GOTO    TRANS
LIMPA_LSB:
	BCF BYTE_RECEBIDO, 0
	GOTO PREPARA_PROXIMA_ITERACAO

SETA_LSB:
	BSF BYTE_RECEBIDO, 0
	GOTO PREPARA_PROXIMA_ITERACAO
SUBROTINA1

	;CORPO DA ROTINA

	RETURN
DELAY104us:
    MOVLW   D'233'
    MOVWF   TMR0
    LOOP_IN:
    BTFSS   INTCON, T0IF
    GOTO    LOOP_IN
    BCF	    INTCON, T0IF
    RETURN
    
DELAY50ms:
    MOVLW   D'61'
    MOVWF   TMR0
    BANK1
    MOVLW   B'00000111'
    MOVWF   OPTION_REG
    BANK0
    GOTO    LOOP_IN
    
	
INICIO
	BANK1				;ALTERA PARA O BANCO 1
	MOVLW	B'00010101' ;CONFIGURA TODAS AS PORTAS DO GPIO (PINOS)
	MOVWF	TRISIO		;COMO SAÍDAS
	MOVLW	B'00010100'
	MOVWF	ANSEL 		;DEFINE PORTAS COMO Digital I/O
	MOVLW	B'00000001'
	MOVWF	OPTION_REG	;DEFINE OPÇÕES DE OPERAÇÃO
	MOVLW	B'00000000'
	MOVWF	INTCON		;DEFINE OPÇÕES DE INTERRUPÇÕES
	
	BANK0				;RETORNA PARA O BANCO
	MOVLW	B'00000111'
	MOVWF	CMCON		;DEFINE O MODO DE OPERAÇÃO DO COMPARADOR ANALÓGICO
	MOVLW	B'00001000'
	MOVWF	ADCON0
	
	

MAIN
	MOVLW	D'8'
	MOVWF	CONTADOR_BYTE
        ;INICIALIZAR SAIDAS
	CLRF	GPIO			;TODAS AS SAIDAS EM LOW INICIALMENTE
	BSF     GPIO, GP1		;COLOCA A LINHA TX EM ESTADO OCIOSO(HIGH)
	;RECEBER BYTE DE INICIAÇAO
	CLRF	BYTE_RECEBIDO		
	ESPERA_RX:
	BTFSC	GPIO, GP0		; Pula se RX (GP0) estiver HIGH (ocioso)
	GOTO	ESPERA_RX		; Fica aqui se estiver LOW 
	RECEBE_BYTE:
	CALL	DELAY104us
	;PRIMEIRO BIT DO BYTE CHECAGEM
	BTFSS	GPIO, GP0
	GOTO	LIMPA_LSB
	GOTO	SETA_LSB
	
	PREPARA_PROXIMA_ITERACAO:
	DECFSZ	CONTADOR_BYTE
	GOTO	PROXIMA	
    	;CHECA SE O BYTE ERA O ESPERADO
	CHECAGEM:
	MOVLW   D'9'
	SUBWF   BYTE_RECEBIDO, W     
	BTFSS	STATUS, Z           ; PULA SE O BYTE RECEBIDO ´ IGUAL A 9(MEU ID)
        GOTO	MAIN		    ;VAI PRO MAIN SE O BIT FOR DIFERENTE, ESPERA O PROXIMO START BIT
	;ACENDE LED POR 50ms
	BSF	GPIO, GP5
	CALL	DELAY50ms
	BCF	GPIO, GP5
	;FAZ CONVERSAO AD
	BSF	ADCON0, 0
	BSF	ADCON0, 1
	WAIT
	BTFSC	ADCON0, 1
	GOTO WAIT
	;TRANSMISSAO
	MOVLW	D'8'
	MOVWF	CONTADOR_BYTE
	BCF	GPIO, GP1   ;ACIONA O TX ENVIANDO 0
	TRANS:
	CALL	DELAY104us
	BTFSS	ADRESH, 0
	GOTO	MANDA_0
	GOTO	MANDA_1
	PREPARA_ITERACAO_SEGUINTE:
	DECFSZ	CONTADOR_BYTE
	GOTO	ITERACAO
	GOTO	MAIN	

	END